blueprint:
  name: Create Group
  description: |
    # Create Group Blueprint
    This blueprint creates a group with either static or dynamic members.
  domain: automation
  source_url: https://gist.github.com/mwolter805/965fb5c3b4d6bf8e9aeba8acd82fd224
  input:
    group_name:
      name: Name to assign to the group.
      default: Group Name
      selector:
        text: {}
    group_object_id:
      name: object_id to assign to the group.
      default: group_id
      selector:
        text: {}
    search_domain:
      name: Dynamic Domain List
      description: Domains to search.
      default: []
      selector:
        object: {}
    search_includes:
      name: Dynamic Include List
      description: Entity object ID's to include.
      default: []
      selector:
        object: {}
    search_excludes:
      name: Dynamic Exclude List
      description: Entity object ID's to exclude.
      default: []
      selector:
        object: {}
    entities_to_add:
      name: Static Entities To Add
      description: Select the entities to add to the group.
      default: []
      selector:
        entity:
          multiple: true
    entities_to_remove:
      name: Static Entities To Remove
      description: Select the entities to remove from the group.
      default: []
      selector:
        entity:
          multiple: true
mode: single
max_exceeded: silent

trigger:
  - platform: homeassistant
    event: start
  - platform: event
    event_type: call_service
    event_data:
      domain: group
      service: reload

variables:
  input_group_name: !input group_name
  input_group_group_object_id: !input group_object_id
  domains: !input search_domain
  includes: !input search_includes
  excludes: !input search_excludes
  add: !input entities_to_add
  rem: !input entities_to_remove

action:
  - service: group.set
    data_template:
      name: '{{ input_group_name }}'
      object_id: '{{ input_group_group_object_id }}'
      entities: >
        {%- set entities = states | selectattr('domain','in', domains) | list if domains else states | list if ( includes or excludes ) %}
        {%- set ns = namespace(include=[], exclude=[]) %}
        {%- for item in includes %}
          {%- set ns.include = ns.include + entities | selectattr('object_id', 'search', item) | list %}
        {%- endfor %}
        {%- for item in excludes %}
          {%- set ns.exclude = ns.exclude + entities | selectattr('object_id', 'search', item) | list %}
        {%- endfor %}
        {%- set entities = entities | select('in', ns.include if includes else entities ) | reject('in', ns.exclude) | map(attribute="entity_id") | list %}
        {%- set entities = ( entities + add.entity_id | list ) | reject('in', rem.entity_id) | list %}
        {{ entities | unique | sort }}
